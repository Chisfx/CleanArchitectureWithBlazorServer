@page "/pages/authentication/forgot-password"

@using Severity = Severity
@using CleanArchitecture.Blazor.Domain.Identity
@using CleanArchitecture.Blazor.Application.Features.Identity.Commands.ResetPassword
@using CleanArchitecture.Blazor.Server.UI.Pages.Identity.Users.Components
@using System.ComponentModel.DataAnnotations

@inject IStringLocalizer<Forgot> L
@inject ISender Sender
@inject ILogger<Forgot> Logger
@inject IdentityRedirectManager RedirectManager
@inject UserManager<ApplicationUser> UserManager
<PageTitle>@Title</PageTitle>

<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />
    
    <MudText Typo="Typo.h4" GutterBottom="true">@L["Forgot Password?"]</MudText>
    <MudText Typo="Typo.body1">@L["No worries! Just enter your email address below and we'll send you a link to reset your password."]</MudText>
    <StatusMessage Message="@Message" Error="true" />
    <div class="mud-input-control mud-input-input-control my-4">
        <div class="mud-input-control-input-container">
            <!--!--><!--!-->
            <div class="mud-input mud-input-outlined mud-shrink">
                <InputText @bind-Value="Input.Email" class="mud-input-slot mud-input-root mud-input-root-outlined" type="text" autocomplete="email" aria-required="true" placeholder="name@example.com" />
                <div class="mud-input-slot mud-input-root mud-input-root-outlined" style="display:none"></div>
                <!--!-->
                <div class="mud-input-outlined-border"></div>
            </div>
            <!--!-->
            <label class="mud-input-label mud-input-label-animated mud-input-label-outlined mud-input-label-inputcontrol" for="userName">@L["E-mail"]</label>
        </div>
        <div class="mud-input-helper-text mud-input-error">
            <div class="d-flex">
                <ValidationMessage For="() => Input.Email" class="mud-input-error" />
            </div>
        </div>
    </div>
    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Size="Size.Large"
               ButtonType="ButtonType.Submit"
               FullWidth="true" 
               Class="mt-3">
        <MudText>@L["Send E-mail"]</MudText>
    </MudButton>
</EditForm>

@code {
    public const string PageUrl = "/pages/authentication/forgot-password";
    public string Title = "Forgot Password";

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();
    private readonly string _resetPasswordToken = string.Empty;
    private string _inputToken = string.Empty;
    private string? Message;
    protected override Task OnInitializedAsync()
    {
        Title = L["Forgot Password"];

        return base.OnInitializedAsync();
    }

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null)
        {
            Message = L["No user found with the provided email address."];
        }
        else
        {
            if (!(await UserManager.IsEmailConfirmedAsync(user)))
            {
                Message = L["Your email address has not been confirmed. Please check your inbox for a confirmation email or request a new confirmation link."];
            }
        }

        var response = await Sender.Send(new ResetPasswordCommand(Input.Email));
        if (response.Succeeded)
        {
            Logger.LogInformation("Rest password email sent to {0}.", Input.Email);
            RedirectManager.RedirectTo(ForgotPasswordConfirmation.PageUrl);
        }
        else
        {
            Message = L["There was an issue sending the reset password email. Please try again later or contact support."];
        }

         
    }


    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}